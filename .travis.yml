language: python
# problem with node-sass in new image (https://github.com/allegro/ralph/issues/3195)
group: deprecated-2017Q4

env:
    global:
        - DATABASE_USER=travis
        - DATABASE_PASSWORD=travis
        - DJANGO_CURRENT_VERSION=1.8.18
        - RALPH2_RALPH3_CROSS_VALIDATION_ENABLED=1
        - REDIS_PORT=6379
        - DATABASE_PORT=5433
    matrix:
        - DJANGO_VERSION=1.8.18 TEST_DB_ENGINE=mysql MYSQL_VERSION=5.6
        - DJANGO_VERSION=1.8.18 TEST_DB_ENGINE=mysql MYSQL_VERSION=5.5
        - DJANGO_VERSION=1.8.18 TEST_DB_ENGINE=psql
        # Django 1.9 build will not pass until #2132 will be merged
        # - DJANGO_VERSION=1.9 TEST_DB_ENGINE=sqlite
        # - DJANGO_VERSION=1.9 TEST_DB_ENGINE=mysql
        # - DJANGO_VERSION=1.9 TEST_DB_ENGINE=psql

# matrix:
#   allow_failures:
#     - env: DJANGO_VERSION=1.9 TEST_DB_ENGINE=mysql
#     - env: DJANGO_VERSION=1.9 TEST_DB_ENGINE=sqlite
#     - env: DJANGO_VERSION=1.9 TEST_DB_ENGINE=psql

services:
    - docker

cache:
  directories:
    - node_modules
    - bower_components

python:
    - "3.4"
    - "3.6"

before_install:
    - pip install flake8==3.0.4 isort==4.2.5
    - make flake
    - npm install -g gulp
    - export RALPH_VERSION=$(./get_version.sh)
    - docker run -d -p "$REDIS_PORT:6379" redis:3.0;
    - export NEW_TAG=$RALPH_VERSION-snapshot-$(date "+%Y%m%d")-$TRAVIS_BUILD_NUMBER
    - if [[ $TEST_DB_ENGINE == mysql ]]; then docker run -d -p "$DATABASE_PORT:3306" -e "MYSQL_ALLOW_EMPTY_PASSWORD=yes" -e "MYSQL_DATABASE=ralph_ng" -e "MYSQL_ROOT_PASSWORD=root" -e "MYSQL_USER=travis" -e "MYSQL_PASSWORD=travis" mysql:$MYSQL_VERSION mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci; fi
    - if [[ $TEST_DB_ENGINE == psql ]]; then
        docker run -d -p "$DATABASE_PORT:5432" -e "POSTGRES_USER=travis" -e "POSTGRES_PASSWORD=travis" -e "POSTGRES_DB=ralph_ng" postgres:9.4;
        pip install psycopg2;
        fi

install:
    - npm config set python /usr/bin/python2.7
    - npm install
    - make js-hint
    - make docs
    - gulp
    - make install-dev
    - pip install coveralls
    - pip install django==$DJANGO_VERSION
    - pip install -rrequirements/openstack.txt

script:
    - python contrib/dhcp_agent/test.py
    - ./scripts/test_settings.sh prod test >/dev/null
    - make coverage
    - ./scripts/check_missing_migrations.sh

after_success:
    - if [[ $TEST_DB_ENGINE == psql ]]; then coveralls; fi

before_deploy:
    - sudo add-apt-repository -y ppa:spotify-jyrki/dh-virtualenv
    - sudo apt-get update
    - sudo apt-get install -y devscripts python-virtualenv git equivs dh-virtualenv libmysqlclient-dev python3-dev libffi-dev nodejs
    - make build-package

deploy:
    -   provider: script
        script: scripts/travis_deploy_docker.sh
        on:
            branch: ng
            python: 3.4
            condition: $TRAVIS_EVENT_TYPE = cron && $TEST_DB_ENGINE = psql && $DJANGO_VERSION = $DJANGO_CURRENT_VERSION
    -   provider: script
        script: scripts/travis_deploy_bintray.sh
        on:
            branch: ng
            python: 3.4
            condition: $TRAVIS_EVENT_TYPE = cron && $TEST_DB_ENGINE = psql && $DJANGO_VERSION = $DJANGO_CURRENT_VERSION

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/837fe61b536818b676ad
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: false     # default: false
