# Default values for ralph.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: allegro/ralph
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

debug: true

useCustomProdPy:
  enabled: false
  configmapName: ralph-prod-py

useCustomNginxConf:
  enabled: false
  configmapName: ralph-nginx-conf

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # Name matches the upstream name within the nginx container.
  name: web
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: ralph.sm1.eqap.io
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

persistence:
  static:
    size: '100Mi'
  media:
    size: '100Mi'
  # Sets persistent volume claim's storageClassName. Defaults to `default`.
  storageClassName: 'standard'
  accessMode: 'ReadWriteOnce'

inkpy:
  enabled: true

mysql:
  image:
    tag: 5.7.36-debian-10-r47
  auth:
    database: ralph_ng
    username: ralph
    password: changeme
    rootPassword: changeme

redis:
  architecture: standalone
  auth:
    password: changeme
  host: redis
  port: 6379
  db: 0


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
